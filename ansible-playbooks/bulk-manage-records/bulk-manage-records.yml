- name: Bulk Manage DNS Records
  hosts: localhost
  gather_facts: false

  # Load the encrypted credentials and the DNS records file.
  vars_files:
    - ~/ansible/ultra_vault.yml
    - records.yml # List of DNS records to manage.

  vars:
    dry_run: false  # When set to true, the playbook will only simulate changes.
    default_ttl: 300 # Default TTL value if not explicitly defined in a record.

  tasks:
    # Ensure that each record in the `records.yml` file has the required fields.
    - name: Validate DNS records before applying
      fail:
        msg: "Record {{ item.name }}.{{ item.zone }} is missing required fields!"
      when: item.zone is not defined or item.name is not defined or item.type is not defined
      loop: "{{ dns_records }}"

    # Show the planned DNS changes if `dry_run` is enabled.
    # This helps verify the changes before applying them.
    - name: Show planned DNS changes (Dry Run Mode)
      debug:
        msg: "Would apply: {{ item }}"
      when: dry_run
      loop: "{{ dns_records }}"

    # Apply DNS record changes only if `dry_run` is false.
    # This creates or updates records as specified in `records.yml`.
    - name: Apply DNS records
      ultradns.ultradns.record:
        zone: "{{ item.zone }}" # The DNS zone where the record resides.
        name: "{{ item.name }}" # The record name (e.g., "www" for www.example.com).
        type: "{{ item.type }}" # The record type (A, TXT, MX, etc.).
        ttl: "{{ item.ttl | default(default_ttl) }}" # Use record-specific TTL or the default.
        state: "{{ item.state }}" # 'present' to create/update, 'absent' to remove.
        provider: "{{ ultra_provider }}" # Uses authentication details from the Vault file.
        data: "{{ item.data | default(omit) }}"  # The record's value. Omit if not needed.
      when: not dry_run
      loop: "{{ dns_records }}"